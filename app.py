#!/usr/bin/env python3

import streamlit as st
st.set_page_config(page_title="AI Melon Ripeness Bot", page_icon="üçà", layout="wide")

import os
import json
from groq import Groq
from dotenv import load_dotenv
import datetime

# ‡πÇ‡∏´‡∏•‡∏î env
load_dotenv(".env")
GROQ_API_KEY = os.getenv("GROQ_API_KEY")
client = Groq(api_key=GROQ_API_KEY)

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡πÅ‡∏•‡∏∞ main() ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß

def main():
    st.markdown("""
        <style>
        body { background-color: #000000; }
        .stForm { background-color: #000000; padding: 2rem; border-radius: 12px; }
        </style>
    """, unsafe_allow_html=True)

    st.title("üçà ‡πÅ‡∏ä‡∏ï‡∏ö‡∏≠‡∏ï‡πÄ‡∏Å‡∏©‡∏ï‡∏£‡∏≠‡∏±‡∏à‡∏â‡∏£‡∏¥‡∏¢‡∏∞")
    st.subheader("‡∏ä‡πà‡∏ß‡∏¢‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Å‡∏Ç‡∏≠‡∏á‡πÄ‡∏°‡∏•‡∏≠‡∏ô ‡∏î‡πâ‡∏ß‡∏¢ AI ")

    if "messages" not in st.session_state:
        st.session_state["messages"] = [
            {"role": "assistant", "content": "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏à‡πâ‡∏≤‡∏ß ‡∏ô‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ä‡∏ó‡∏ö‡∏≠‡∏ï‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Å‡∏Ç‡∏≠‡∏á‡πÄ‡∏°‡∏•‡πà‡∏≠‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•6‡∏°‡∏¥‡∏ï‡∏¥..."}
        ]

    with st.form("chat_form"):
        query = st.text_input("üó£Ô∏è ‡∏Ñ‡∏∏‡∏ì:", placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏Ç‡∏≠‡∏á‡πÄ‡∏°‡∏•‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå...").strip()
        submitted = st.form_submit_button("üöÄ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°")

        if submitted and query:
            answer = chatboot(query)
            st.session_state["messages"].append({"role": "user", "content": query})
            st.session_state["messages"].append({"role": "assistant", "content": answer})
        elif submitted and not query:
            st.warning("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á")

    for msg in st.session_state["messages"]:
        if msg["role"] == "user":
            st.markdown(f"**üßë‚Äçüåæ ‡∏Ñ‡∏∏‡∏ì:** {msg['content']}")
        else:
            try:
                data = json.loads(msg["content"])
                with st.container():
                    st.markdown("#### ü§ñ ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏°‡∏•‡∏≠‡∏ô")
                    col1, col2 = st.columns(2)
                    col1.metric("‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Å", data.get("ripeness", "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"))
                    col1.metric("‡∏Ñ‡πà‡∏≤ Brix", data.get("brix", "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"))
                    col2.metric("‡∏Ñ‡πà‡∏≤ pH", data.get("ph", "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"))
                    col2.metric("‡∏≠‡∏≤‡∏¢‡∏∏‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏±‡∏Å‡∏©‡∏≤", data.get("‡∏≠‡∏≤‡∏¢‡∏∏‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏±‡∏Å‡∏©‡∏≤","‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"))
                    st.info(data.get("reason", "‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•..."))
            except Exception:
                st.markdown(f"**ü§ñ ‡∏ö‡∏≠‡∏ó:** {msg['content']}")

    st.markdown("---")
    st.caption("üå± ‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏î‡∏¢‡∏ó‡∏µ‡∏° Sn.Guardian gen X ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏Ç‡∏≠‡∏á‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡∏ö‡πà‡∏°‡πÄ‡∏û‡∏≤‡∏∞‡∏ô‡∏ß‡∏±‡∏ï‡∏Å‡∏£‡∏õ‡∏±‡∏ç‡∏ç‡∏≤‡∏õ‡∏£‡∏∞‡∏î‡∏¥‡∏©‡∏ê‡πå (AI Innovator) ü§ñ")

if __name__ == "__main__":
    main()
